name: Node CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [13.x]

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install
      run: |
        make install
      env:
        CI: true
    - name: Run linter
      run: |
        make lint
    - name: Test & publish code coverage
      uses: paambaati/codeclimate-action@v2.4.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: make test-coverage
        debug: true
    - name: Build
      run: |
        npm run build

  deploy:

    name: deploy to production

    runs-on: ubuntu-latest

    needs: [build]

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Deploy on Zeit
      uses: amondnet/now-deployment@v2
      id: now-deployment-staging
      if: github.event_name == 'pull_request'
      with:
        # github-token: ${{ secrets.GITHUB_TOKEN }}
        zeit-token: ${{ secrets.ZEIT_TOKEN }}
        now-org-id: ${{ secrets.NOW_ORG_ID }}
        now-project-id: ${{ secrets.NOW_PROJECT_ID }}
      uses: amondnet/now-deployment@v2
      id: now-deployment-production
      if: github.event_name == 'push'
      with:
        # github-token: ${{ secrets.GITHUB_TOKEN }}
        zeit-token: ${{ secrets.ZEIT_TOKEN }}
        now-org-id: ${{ secrets.NOW_ORG_ID }}
        now-project-id: ${{ secrets.NOW_PROJECT_ID }}
        now-args: '--prod '